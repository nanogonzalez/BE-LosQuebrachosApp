// <auto-generated />
using System;
using BE_LosQuebrachosApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE_LosQuebrachosApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Chofer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransporteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransporteId");

                    b.ToTable("Choferes");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.DestinoDeCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("NombreEstablecimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("DestinosDeCarga");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.DestinoDeDescarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("NombreEstablecimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DestinosDeDescarga");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.OrdenDeCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoDeCargaId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoDeDescargaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DiaHoraCarga")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistanciaViaje")
                        .HasColumnType("int");

                    b.Property<string>("NumeroOrden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMercaderia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DestinoDeCargaId");

                    b.HasIndex("DestinoDeDescargaId");

                    b.ToTable("OrdenesDeCargas");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.OrdenDeGasoil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChoferId")
                        .HasColumnType("int");

                    b.Property<string>("Estacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Litros")
                        .HasColumnType("int");

                    b.Property<string>("NumeroOrden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransporteId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChoferId");

                    b.HasIndex("TransporteId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("OrdenesDeGasoil");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Transporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cuit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transportes");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Acoplado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CapacidadTN")
                        .HasColumnType("int");

                    b.Property<string>("Chasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransporteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TransporteId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Chofer", b =>
                {
                    b.HasOne("BE_LosQuebrachosApp.Entities.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("TransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transporte");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.DestinoDeCarga", b =>
                {
                    b.HasOne("BE_LosQuebrachosApp.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.OrdenDeCarga", b =>
                {
                    b.HasOne("BE_LosQuebrachosApp.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE_LosQuebrachosApp.Entities.DestinoDeCarga", "DestinoDeCarga")
                        .WithMany()
                        .HasForeignKey("DestinoDeCargaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE_LosQuebrachosApp.Entities.DestinoDeDescarga", "DestinoDeDescarga")
                        .WithMany()
                        .HasForeignKey("DestinoDeDescargaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("DestinoDeCarga");

                    b.Navigation("DestinoDeDescarga");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.OrdenDeGasoil", b =>
                {
                    b.HasOne("BE_LosQuebrachosApp.Entities.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("ChoferId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE_LosQuebrachosApp.Entities.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("TransporteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BE_LosQuebrachosApp.Entities.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Chofer");

                    b.Navigation("Transporte");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("BE_LosQuebrachosApp.Entities.Vehiculo", b =>
                {
                    b.HasOne("BE_LosQuebrachosApp.Entities.Transporte", "Transporte")
                        .WithMany()
                        .HasForeignKey("TransporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transporte");
                });
#pragma warning restore 612, 618
        }
    }
}
